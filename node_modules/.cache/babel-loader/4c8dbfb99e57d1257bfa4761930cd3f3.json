{"ast":null,"code":"import { put, call, takeEvery, takeLatest, all } from 'redux-saga/effects';\nimport api from '../../api';\nimport { REQUEST_LOGIN } from '../actionTypes';\n\nfunction* requestLogin(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = yield call(apiLoginRequest, payload);\n\n    if (!!data.token) {\n      localStorage.setItem(\"userToken\", data.token);\n    }\n  } catch (error) {}\n}\n\nconst apiLoginRequest = async payload => {\n  return await api.post('/api/login', payload);\n};\n\nfunction* watchRequestLogin() {\n  yield takeLatest(REQUEST_LOGIN, requestLogin);\n}\n\nexport default function* rootSaga() {\n  yield all([watchRequestLogin()]);\n}","map":{"version":3,"sources":["C:/Users/JEFIN/Desktop/cubazada/src/redux/auth/saga.jsx"],"names":["put","call","takeEvery","takeLatest","all","api","REQUEST_LOGIN","requestLogin","payload","data","apiLoginRequest","token","localStorage","setItem","error","post","watchRequestLogin","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,GAA3C,QAAsD,oBAAtD;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,SACIC,aADJ,QAEO,gBAFP;;AAIA,UAAUC,YAAV,OAAiC;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;;AAC7B,MAAG;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAD,EAAkBF,OAAlB,CAA3B;;AACA,QAAG,CAAC,CAACC,IAAI,CAACE,KAAV,EAAgB;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACE,KAAvC;AACH;AACA,GALD,CAKC,OAAMG,KAAN,EAAY,CAEZ;AACJ;;AAED,MAAMJ,eAAe,GAAG,MAAMF,OAAN,IAAiB;AACrC,SAAO,MAAMH,GAAG,CAACU,IAAJ,CAAS,YAAT,EAAuBP,OAAvB,CAAb;AACH,CAFD;;AAIA,UAAUQ,iBAAV,GAA6B;AACzB,QAAMb,UAAU,CAACG,aAAD,EAAgBC,YAAhB,CAAhB;AACH;;AAED,eAAe,UAAUU,QAAV,GAAoB;AAC/B,QAAMb,GAAG,CAAC,CACNY,iBAAiB,EADX,CAAD,CAAT;AAGH","sourcesContent":["import { put, call, takeEvery, takeLatest, all } from 'redux-saga/effects';\r\nimport api from '../../api';\r\n\r\nimport { \r\n    REQUEST_LOGIN\r\n} from '../actionTypes';\r\n\r\nfunction* requestLogin({payload}){\r\n    try{\r\n    const { data } = yield call(apiLoginRequest, payload);\r\n    if(!!data.token){\r\n        localStorage.setItem(\"userToken\", data.token);\r\n    }\r\n    }catch(error){\r\n        \r\n    }\r\n}   \r\n\r\nconst apiLoginRequest = async payload => {\r\n    return await api.post('/api/login', payload);\r\n}\r\n\r\nfunction* watchRequestLogin(){\r\n    yield takeLatest(REQUEST_LOGIN, requestLogin);\r\n}\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        watchRequestLogin(),\r\n    ]);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}